package ${packager}.dao.entity;

import com.google.common.collect.Lists;
import com.ijson.mongo.support.entity.BaseEntity;
import lombok.Data;
import lombok.ToString;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.collections.MapUtils;
import org.mongodb.morphia.annotations.*;
import com.ijson.mongo.generator.util.ObjectId;
import com.ijson.framework.model.AuthContext;

import java.util.List;
import java.util.Map;

@Data
@Entity(value = ${name}Entity.Fields.DB_COLLECTION, noClassnameStored = true)
@ToString(callSuper = true)
public class ${name}Entity extends BaseEntity{


    <%
    for(col in columns){
        print("\t/**\n");
        print("\t *\t" +col.describe+"\n");
        print("\t */\n");
        print("\t@Property(Fields."+col.toUpperName+")\n    ");
        print("private "+col.simpleType+" "+col.name+";\n\n");
    }
    %>


    public static void shortUrl(List<${name}Entity> entities, Map<String, String> shortUrlByAliasIds) {
        if (CollectionUtils.isNotEmpty(entities) && MapUtils.isNotEmpty(shortUrlByAliasIds)) {
            for (${name}Entity entity : entities) {
                entity.setShortUrl(shortUrlByAliasIds.get(entity.getId()));
            }
        }
    }


    public interface Fields  extends BaseEntity.Fields {
        <%
            for(col in columns){
                if("id"!=col.name){
                    print(" \t\tString "+col.toUpperName+"=\""+col.name+"\";\n");
                }
            }
            %>
        String DB_COLLECTION ="${name}";
    }
}
