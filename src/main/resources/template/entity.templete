package ${packager}.dao.entity;

import com.google.common.collect.Lists;
import com.ijson.mongo.support.model.BaseEntity;
import lombok.Data;
import lombok.ToString;
import org.mongodb.morphia.annotations.*;
import com.ijson.mongo.generator.util.ObjectId;

import java.util.List;

@Data
@Entity(value = "${name}", noClassnameStored = true)
@ToString(callSuper = true)
public class ${name}Entity extends BaseEntity{

    @Id
    private String id;

    <%
    for(col in columns){
        print("\t@Property(Fields."+col.name+")\n    ");
        print("private "+col.simpleType+" "+col.name+";\n\n");
    }
    %>

    @Property(Fields.lastModifiedBy)
    private String lastModifiedBy;

    @Property(Fields.lastModifiedTime)
    private long lastModifiedTime;

    @Property(Fields.deleted)
    private Boolean deleted;

    @Property(Fields.enable)
    private boolean enable;

    @Property(Fields.createdBy)
    private String createdBy;

    @Property(Fields.createTime)
    private long createTime;



    public void init(AuthContext context) {
        this.lastModifiedBy = context.getId();
        this.enable = true;
        this.deleted = false;
        this.createdBy = context.getId();
        this.createTime = System.currentTimeMillis();
        this.lastModifiedTime = System.currentTimeMillis();
    }


    public void edit(AuthContext context) {
        this.lastModifiedBy = context.getId();
        this.lastModifiedTime = System.currentTimeMillis();
    }

    public interface Fields {
        String id = "_id";
        <%
            for(col in columns){
                if("id"==col.name){
                    print("\t\tString id = \"_id\";\n");
                }else{
                    print("\t\tString "+col.name+"=\""+col.name+"\";\n");
                }
            }

        %>
        String createdBy = "createdBy";
        String createTime = "createTime";
        String enable = "enable";
        String deleted = "deleted";
        String lastModifiedBy ="lastModifiedBy";
        String lastModifiedTime ="lastModifiedTime";
    }
}
