package ${packager}.service.model.info;

import com.google.common.collect.Lists;
import ${packager}.dao.entity.${name}Entity;
import lombok.Data;
import org.apache.commons.collections.CollectionUtils;

import java.io.Serializable;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;


@Data
public class ${name}Info implements Serializable {

     private String id;
     <%
        for(col in columns){
           print("\t/**\n");
           print("\t *\t" +col.describe+"\n");
           print("\t */\n");
           print("\tprivate "+col.simpleType+" "+col.name+";\n\n");
        }
     %>
     private boolean enable;
     private String shortUrl;


     public static ${name}Info create(${name}Entity entity) {
         if (Objects.isNull(entity)) {
             return null;
         }
         ${name}Info info = new ${name}Info();

         <%
             for(col in columns){
                 print("\t\tinfo.set"+col.toSimpleName+"(entity.get"+col.toSimpleName+"());\n");
             }
         %>
         info.setEnable(entity.getEnable());
         info.setId(entity.getId());
         info.setShortUrl(entity.getShortUrl());
         return info;
     }


     public static List<${name}Info> createList(List<${name}Entity> dataList) {
         if (CollectionUtils.isEmpty(dataList)) {
             return Lists.newArrayList();
         }
         return dataList.stream().map(${name}Info::create).collect(Collectors.toList());
     }
}
